(()=>{"use strict";var n={890:(n,e,t)=>{t.d(e,{Z:()=>c});var a=t(684),i=t.n(a),r=t(645),o=t.n(r)()(i());o.push([n.id,"* {\n    margin: 0; \n    padding: 0; \n    box-sizing: border-box;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\n\n\n/* header */ \n.selected {\n    background-color: grey;\n}\n\n.header-nav {\n    \n}\n\n.header-nav ul {\n    list-style: none;\n    display: flex;\n    gap: 5px;\n    justify-content: center;\n\n    font: 16px; \n    font-weight: bold;\n}\n\n.header-nav li {\n    padding: 20px; \n}\n\nheader h1 {\n    text-align: center;\n    padding: 40px;\n}\n\n.tab:hover {\n    background-color: darkgray;\n}\n\n\n\n/* footer */\nfooter {\n    text-align: center;\n    font-size: 16px;\n    padding: 16px;\n}\n\n\n\n/* main content */\nmain#main-content {\n    flex: 1; \n    padding: 16px; \n    margin-left: 50px;\n    margin-right: 50px;\n}\n\n.about-container {\n    display: flex; \n    flex-direction: column;\n    align-items: center;\n    gap: 20px; \n}\n\n.about-header {\n    padding: 10px; \n}\n\n.about-image {\n    width: max(340px, 50%);\n    height: auto;\n    border-radius: 8px;\n}\n\n.about-text {\n    font-size: 20px;\n}\n\n\n\n.menu-container {\n    display: grid; \n    gap: 50px; \n    grid-template-columns: repeat(2, 1fr);\n}\n\n\n\n.menu-item {\n    text-align: center;\n    display: flex; \n    flex-direction: column;\n    align-items: center;\n    gap: 10px; \n    padding: 16px; \n  }\n\n  .menu-item-image {\n    width: max(200px, 100%);\n    height: auto;\n    border-radius: 8px;\n  }\n\n  .menu-item-text {\n    font-size: 20px;\n  }\n\n  .menu-item-price {\n    font-size: 24px;\n  }\n\n\n\n  .contact-container {\n    display: flex; \n    flex-direction: column;\n    gap: 30px; \n    align-items: center;\n  }\n\n  .contact-container img {\n    border-radius: 16px;\n    width: max(300px, 25%);\n    height: auto;\n  }\n\n  .contact-table {\n    font-size: 20px;\n    text-align: center;\n    width: 50%;\n  }\n\n  @media (max-width: 800px) {\n    .menu-container {\n        grid-template-columns: 1fr; \n    }\n\n    main#main-content {\n        margin-left: 0;\n        margin-right: 0;\n    }\n  }","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,yCAAyC;AAC7C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;;;AAIA,WAAW;AACX;IACI,sBAAsB;AAC1B;;AAEA;;AAEA;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,QAAQ;IACR,uBAAuB;;IAEvB,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,0BAA0B;AAC9B;;;;AAIA,WAAW;AACX;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;AACjB;;;;AAIA,iBAAiB;AACjB;IACI,OAAO;IACP,aAAa;IACb,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;;;AAIA;IACI,aAAa;IACb,SAAS;IACT,qCAAqC;AACzC;;;;AAIA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,aAAa;EACf;;EAEA;IACE,uBAAuB;IACvB,YAAY;IACZ,kBAAkB;EACpB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;;;EAIA;IACE,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;EACrB;;EAEA;IACE,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,eAAe;IACf,kBAAkB;IAClB,UAAU;EACZ;;EAEA;IACE;QACI,0BAA0B;IAC9B;;IAEA;QACI,cAAc;QACd,eAAe;IACnB;EACF",sourcesContent:["* {\n    margin: 0; \n    padding: 0; \n    box-sizing: border-box;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\n\n\n/* header */ \n.selected {\n    background-color: grey;\n}\n\n.header-nav {\n    \n}\n\n.header-nav ul {\n    list-style: none;\n    display: flex;\n    gap: 5px;\n    justify-content: center;\n\n    font: 16px; \n    font-weight: bold;\n}\n\n.header-nav li {\n    padding: 20px; \n}\n\nheader h1 {\n    text-align: center;\n    padding: 40px;\n}\n\n.tab:hover {\n    background-color: darkgray;\n}\n\n\n\n/* footer */\nfooter {\n    text-align: center;\n    font-size: 16px;\n    padding: 16px;\n}\n\n\n\n/* main content */\nmain#main-content {\n    flex: 1; \n    padding: 16px; \n    margin-left: 50px;\n    margin-right: 50px;\n}\n\n.about-container {\n    display: flex; \n    flex-direction: column;\n    align-items: center;\n    gap: 20px; \n}\n\n.about-header {\n    padding: 10px; \n}\n\n.about-image {\n    width: max(340px, 50%);\n    height: auto;\n    border-radius: 8px;\n}\n\n.about-text {\n    font-size: 20px;\n}\n\n\n\n.menu-container {\n    display: grid; \n    gap: 50px; \n    grid-template-columns: repeat(2, 1fr);\n}\n\n\n\n.menu-item {\n    text-align: center;\n    display: flex; \n    flex-direction: column;\n    align-items: center;\n    gap: 10px; \n    padding: 16px; \n  }\n\n  .menu-item-image {\n    width: max(200px, 100%);\n    height: auto;\n    border-radius: 8px;\n  }\n\n  .menu-item-text {\n    font-size: 20px;\n  }\n\n  .menu-item-price {\n    font-size: 24px;\n  }\n\n\n\n  .contact-container {\n    display: flex; \n    flex-direction: column;\n    gap: 30px; \n    align-items: center;\n  }\n\n  .contact-container img {\n    border-radius: 16px;\n    width: max(300px, 25%);\n    height: auto;\n  }\n\n  .contact-table {\n    font-size: 20px;\n    text-align: center;\n    width: 50%;\n  }\n\n  @media (max-width: 800px) {\n    .menu-container {\n        grid-template-columns: 1fr; \n    }\n\n    main#main-content {\n        margin-left: 0;\n        margin-right: 0;\n    }\n  }"],sourceRoot:""}]);const c=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(a)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(o[d]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);a&&o[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},684:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(i," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},o=[],c=0;c<n.length;c++){var d=n[c],s=a.base?d[0]+a.base:d[0],A=r[s]||0,l="".concat(s," ").concat(A);r[s]=A+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=i(u,a);a.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=a(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var c=t(r[o]);e[c].references--}for(var d=a(n,i),s=0;s<r.length;s++){var A=t(r[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,i&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var i=e[a];if(void 0!==i)return i.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"pizza-stock.jpeg";function e(){const e=document.createElement("div");e.classList.add("about-container");const t=new Image;t.src=n,t.classList.add("about-image");const a=document.createElement("h2");a.textContent="Mama Mia!",a.classList.add("about-header");const i=document.createElement("p");return i.textContent="At Pizza Pasta Restaurant we know about two things and two things only: Pizza and Pasta. That's it. Enjoy!",i.classList.add("about-text"),e.appendChild(a),e.appendChild(t),e.appendChild(i),e}const a=t.p+"pizza-stock2.jpeg",i=t.p+"pasta-stock.jpeg";function r(n,e,t){const a=document.createElement("div");a.classList.add("menu-item");const i=new Image;i.src=n,i.classList.add("menu-item-image");const r=document.createElement("p");r.classList.add("menu-item-text"),r.textContent=e;const o=document.createElement("p");return o.classList.add("menu-item-price"),o.textContent=t,a.appendChild(i),a.appendChild(r),a.appendChild(o),a}const o=t.p+"chef-pizza-stock.jpeg";function c(n,e,t){const a=document.createElement("tr"),i=document.createElement("td"),r=document.createElement("td");i.textContent=e+": ",r.textContent=t,a.appendChild(i),a.appendChild(r),n.appendChild(a)}var d=t(379),s=t.n(d),A=t(795),l=t.n(A),p=t(569),u=t.n(p),m=t(565),f=t.n(m),C=t(216),h=t.n(C),g=t(589),x=t.n(g),B=t(890),I={};I.styleTagTransform=x(),I.setAttributes=f(),I.insert=u().bind(null,"head"),I.domAPI=l(),I.insertStyleElement=h(),s()(B.Z,I),B.Z&&B.Z.locals&&B.Z.locals;const[b,v,E]=["about-tab","menu-tab","contact-tab"],y=document.getElementById("main-content");function w(n){let t=this.id;switch(function(){for(;y.firstChild;)y.firstChild.remove()}(),document.querySelectorAll(".tab").forEach((n=>{n.classList.remove("selected")})),this.classList.add("selected"),t){case b:y.appendChild(e());break;case v:y.appendChild(function(){const n=document.createElement("div");return n.classList.add("menu-container"),[r(a,"Pizza","$10.50"),r(i,"Pasta","$14.99")].forEach((e=>{n.appendChild(e)})),n}());break;case E:y.appendChild(function(){const n=new Image;n.src=o;const e=document.createElement("div");e.classList.add("contact-container");const t=document.createElement("h2");t.textContent="Contact Us!";const a=document.createElement("table");return a.classList.add("contact-table"),c(a,"Phone Number","1-800-FAKE-NUM"),c(a,"Email","pizzapasta@fakeemail.com"),c(a,"Address","123 Mushroom Blvd"),e.appendChild(t),e.appendChild(a),e.appendChild(n),e}())}}document.body.insertBefore(function(){const n=document.createElement("header");n.id="header";let e=document.createElement("h1");e.textContent="Pizza Pasta Restaurant",n.appendChild(e);let t=document.createElement("nav");t.id="header-nav",t.classList.add("header-nav");let a=document.createElement("ul");t.appendChild(a);let i=document.createElement("li");i.textContent="About",i.id=b,i.classList.add("tab"),a.appendChild(i);let r=document.createElement("li");r.textContent="Menu",r.id=v,r.classList.add("tab"),a.appendChild(r);let o=document.createElement("li");return o.textContent="Contact",o.id=E,o.classList.add("tab"),a.appendChild(o),n.appendChild(t),n}(),y),document.body.appendChild(function(){const n=document.createElement("footer");return n.id="footer",n.textContent="Edrees W. 2022",n}()),y.appendChild(e()),document.getElementById("about-tab").classList.add("selected"),document.querySelectorAll(".tab").forEach((n=>{n.addEventListener("click",w)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,